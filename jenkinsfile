pipeline {
    agent {
        docker {
            image 'your-jenkins-docker-image'
            args '-u root' // Run as root to allow modifications to /var/jenkins_home/.ssh
        }
    }

    environment {
        SSH_CREDENTIALS_ID = 'mysite'
        SERVER_IP = 'ec2-35-174-18-61.compute-1.amazonaws.com'
        REMOTE_USER = 'ubuntu' // Change this to the appropriate non-root user
        GITHUB_REPO_URL = 'https://github.com/Mutuwa99/mywebsite.git'
    }

    stages {
        stage('Prepare') {
            steps {
                script {
                    // Clean workspace
                    deleteDir()

                    // Checkout the code from the GitHub repository
                    checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[url: GITHUB_REPO_URL]]])
                }
            }
        }

        stage('Test SSH Connection') {
            steps {
                script {
                    // Use SSH credentials to test the connection
                    withCredentials([file(credentialsId: SSH_CREDENTIALS_ID, variable: 'SSH_KEY')]) {
                        // Add the server's host key to known_hosts
                        sh "ssh-keyscan -H ${SERVER_IP} >> /root/.ssh/known_hosts"

                        // Test the connection
                        sh "ssh -i /root/.ssh/id_rsa -o StrictHostKeyChecking=no ${REMOTE_USER}@${SERVER_IP} 'echo Connection successful'"
                    }
                }
            }
        }

        stage('Deploy Code') {
            steps {
                script {
                    // Ensure remote directory exists
                    sh "ssh -i /root/.ssh/id_rsa ${REMOTE_USER}@${SERVER_IP} 'mkdir -p /var/www/html/'"

                    // Deploy the code to the server using rsync
                    withCredentials([file(credentialsId: SSH_CREDENTIALS_ID, variable: 'SSH_KEY')]) {
                        try {
                            sh "rsync -avz -e 'ssh -i /root/.ssh/id_rsa' --exclude='.git' ./ ${REMOTE_USER}@${SERVER_IP}:/var/www/html/"
                            echo 'Deployment successful!'
                        } catch (Exception e) {
                            echo "Deployment failed: ${e.message}"
                            error 'Deployment failed!'
                        }
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline successful!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
